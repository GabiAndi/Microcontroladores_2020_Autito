#ifndef INC_DATATYPES_H_
#define INC_DATATYPES_H_

/**********************************************************************************/
/*********************************** Includes *************************************/
/**********************************************************************************/
#include <inttypes.h>

#include "ticker.h"
/**********************************************************************************/
/**********************************************************************************/
/**********************************************************************************/

/**********************************************************************************/
/*********************************** Typedef **************************************/
/**********************************************************************************/

/******************************** Datos del ADC ***********************************/
typedef struct
{
	volatile uint16_t data[6];

	volatile uint16_t mean[6];
}__attribute__ ((packed)) adc_buffer_t;
/**********************************************************************************/

/****************************** Datos en la flash *********************************/
typedef struct
{
	// Datos de conexion WiFi
	uint8_t ssid[30];
	uint8_t ssid_length;

	uint8_t psw[30];
	uint8_t psw_length;

	uint8_t ip_mcu[20];
	uint8_t ip_mcu_length;

	uint8_t ip_pc[20];
	uint8_t ip_pc_length;

	uint8_t port[10];
	uint8_t port_length;

	// Datos del control del autito
	int8_t p0;
	int8_t p1;
	int8_t p2;
	int8_t p3;
	int8_t p4;
	int8_t p5;

	uint16_t kp;
	uint16_t kd;
	uint16_t ki;

	uint8_t padding[1024 - 31 * 2 - 21 * 2 - 11 - 1 - 2 * 3 - 6];

	uint8_t checksum;
}__attribute__ ((packed)) system_flash_data_t;
/**********************************************************************************/

/******************************* Convertir datos **********************************/
typedef union
{
	uint8_t u8[4];
	uint16_t u16[2];
	uint32_t u32;

	int8_t i8[4];
	int16_t i16[2];
	int32_t i32;
}system_byte_converter_u;
/**********************************************************************************/

/*********************************** Bufferes *************************************/
typedef struct
{
	volatile uint8_t data[256];
	volatile uint8_t read_index;
	volatile uint8_t write_index;
}system_ring_buffer_t;
/**********************************************************************************/

/*********************************** Comandos *************************************/
typedef struct
{
	system_ring_buffer_t *buffer_read;

	uint8_t read_state;
	uint8_t read_payload_init;
	uint8_t read_payload_length;

	ticker_t *read_time_out;

	system_ring_buffer_t *buffer_write;
}system_cmd_manager_t;
/**********************************************************************************/

/**********************************************************************************/
/**********************************************************************************/
/**********************************************************************************/

#endif /* INC_DATATYPES_H_ */
